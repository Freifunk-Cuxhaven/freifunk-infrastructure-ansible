function ffnw_is_{{ site.code }}() {
  return net ~ [ {{ site.ffnw.network.ipv6 }}+ ];
}

table 'ffnw_{{ site.code }}';

table 'ffnw';

# Import all routes on interface br-{{ site.code }}
protocol direct {
  table 'ffnw_{{ site.code }}';
  interface "br-{{ site.code }}";
  import where ffnw_is_{{ site.code }}();
};

protocol pipe {
  table 'ffnw_{{ site.code }}';
  peer table ffnw;
  export where ffnw_is_{{ site.code }}();
  import none;
};

protocol pipe {
  table 'ffnw_{{ site.code }}';
  peer table 'mesh_{{ site.code }}';
  export where ffnw_is_{{ site.code }}();
  import where ffnw_is_{{ site.code }}();
};

protocol pipe {
  table 'ffnw';
  peer table 'ffnw_kernel';
  export all;
  import all;
};

protocol pipe {
  table 'ffnw';
  peer table 'exit_{{ site.code }}';
  export all;
  import none;
};

template bgp bgp_ffnw {
  table ffnw;
  local as asn;
  import all;
  export all;
  direct;
};

# load ffnw peering config
include "/etc/bird/bird6.peers.d/ffnw.conf";
