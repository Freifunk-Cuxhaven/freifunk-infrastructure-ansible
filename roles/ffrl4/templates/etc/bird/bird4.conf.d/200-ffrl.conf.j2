# FFRL ipv4 peering

# One table for each peering partner
table ffrl;

protocol pipe {
  table ffrl;
  peer table mesh_kernel;
  import none;
  export filter {
    if !is_public_ip() then {
      reject;
    }
    preference = 1000;
    accept;
  };
};

protocol static 'ffrl4' {
  table ffrl;
  {% for sitename, _ in ffrl.site.items() %}
  route {{ interface.ffrl.address.ipv4 }} via "ffrl-{{ sitename }}";
  {% endfor %}
  import all;
}

template bgp bgp_ffrl {
  table ffrl;
  local as asn;
  # accept all routes
  import keep filtered;
  import where is_public_ip();
  # export only routes from our subnet
  export where net ~ [ {{ interface.ffrl.address.ipv4 }}+ ];
  direct;
};

# load ffrl peering config
include "/etc/bird/bird4.peers.d/ffrl.conf";

# export ipv4 default route into mesh table
protocol static 'default_nat' {
  table mesh;
  route 0.0.0.0/0 via {{ interface.mesh_bridge.address.ipv4 | ipaddr('address') }};
  import filter {
    preference = 100;
    accept;
  };
};
