function ffrl_is_ours() {
  return net ~ [ {{ site.ffrl.network.ipv6 }}+ ];
}

table 'ffrl_{{ site.code }}';

# Import all routes on interface br-{{ site.code }}
protocol direct {
  table 'ffrl_{{ site.code }}';
  interface "br-{{ site.code }}";
  import where ffrl_is_ours();
};

protocol pipe {
  table 'ffrl_{{ site.code }}';
  peer table ffrl_kernel;
  export where ffrl_is_ours();
  import none;
};

protocol pipe {
  table 'ffrl_{{ site.code }}';
  peer table 'mesh_{{ site.code }}';
  export where ffrl_is_ours();
  import none;
};

template bgp bgp_ffrl {
  table ffrl_kernel;
  local as asn;
  # accept all routes
  import where net ~ [ ::/0+ ];
  # export only routes from our subnet
  export where ffrl_is_ours() && source != RTS_BGP;
  direct;
};

# load ffrl peering config
include "/etc/bird/bird6.peers.d/ffrl.conf";
